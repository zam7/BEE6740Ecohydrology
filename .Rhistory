install.packages("EcoHydRology") # Only needs to be done once on your computer
installed.packages("xml")
installed.packages("EcoHydRology")
installed.packages("acid")
install.packages("topmodel")
load("~/github/Coastal_Engineering/feb27_100mm.dat")
?lumped_VSA_model
??lumped_VSA_model
# Ecohydrology 2018
# In Class Assignment 11
setwd("~/github/Ecohydrology_Modeling")
#Step 1: Read in daily temperature data, convert to SI, add a date field
MetData <- read.csv("MetData_Tracer.csv")
MetData$Date = as.Date(ISOdate(MetData$Year, MetData$Month, MetData$Day))
#Step 2: Construct a Water and Tracer Mass Balance Model
#Step 2a: Compute mass of tracer In (mg)
# Convert precipitation from mm to m
MetData$Precip_m = MetData$Precip_mm / 1000
MetData$Tin_obs_mg = MetData$Cin_mgm * MetData$Precip_m
#Step 2b: Set up the catchment water balance (delta S = Precip - ET - Q)
# Assume an initial catchment storage of 400 mm
# Calculate the mass balance through time
MetData$Q_m = MetData$Q_mm/1000
Si_mm = 370
Si_m = Si_mm / 1000
MetData$St_mm[1] = Si_mm # initialize with starting condition
for (i in 2:length(MetData$Precip_mm))
{
MetData$St_mm[i] = MetData$St_mm[i-1] + MetData$Precip_mm[i] - MetData$ET_mm[i] - MetData$Q_mm[i]
}
MetData$St_m = MetData$St_mm/1000
plot(MetData$St_mm)
#Step 2c: Set up the tracer mass balance (delta C_mass = C_mass_in - C_mass_Q - C_Mass_ET)
# Assume ET removes 0 tracer
# Initial Conditions: average precip concentration is ~ 10 mg / m
# Assume an initial catchment storage tracer concentration of 26 mg / m
# Why are we assuming catchment stored concentration is higher than input concentration?
Ci_mgm = 26
Ti_mg = Ci_mgm * Si_m
# Assume mixing in the catchement
# initialize with starting condition
MetData$Ts_mg = Ti_mg
MetData$Cs_mgm = MetData$Ts_mg / MetData$St_m
MetData$Tout_mix_mg = MetData$Q_m * MetData$Cs_mgm
for (i in 2:length(MetData$Precip_mm))
{
MetData$Ts_mg[i] = MetData$Ts_mg[i-1] + (MetData$Precip_m[i]*MetData$Cin_mgm[i]) - MetData$Tout_mix_mg[i-1]
MetData$Cs_mgm[i] = MetData$Ts_mg[i] / MetData$St_m[i]
MetData$Tout_mix_mg[i] = MetData$Q_m[i] * MetData$Cs_mgm[i]
}
# Assume no mixing, calculate Tout_nomix_mg
MetData$Tout_nomix_mg = MetData$Q_m * MetData$Cin_mgm
# Convert Tout values into Cout values
MetData$Cout_mix_mgm = MetData$Tout_mix_mg / MetData$Q_m
MetData$Cout_nomix_mgm = MetData$Tout_nomix_mg / MetData$Q_m
# Replace all NaN for zero flow with 0
MetData[is.na(MetData)] <- 0
# Plot the observed vs simulated values for mass and concentration
# Observed vs simulated values for concentration for mixing and no mixing conditions
plot(MetData$Date[1:(5*365)], MetData$Cout_mgm[1:(5*365)], main = "Assumed Mixing in Watershed", xlab = "Date (years)", ylab = "Tracer Concentration (mg/m)")
lines(MetData$Date[1:(5*365)], MetData$Cout_mix_mgm[1:(5*365)], col = "red")
legend( x= "topright",
legend=c("Observed","Modeled"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
plot(MetData$Date[1:(5*365)], MetData$Cout_mgm[1:(5*365)], main = "Assumed No Mixing in Watershed", xlab = "Date (years)", ylab = "Tracer Concentration (mg/m)")
lines(MetData$Date[1:(5*365)], MetData$Cout_nomix_mgm[1:(5*365)], col = "red")
legend( x= "topright",
legend=c("Observed","Modeled"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
# Observed vs simulated values for mass for mixing and no mixing conditions
# Calculate Tout observed using the Cout and Q
MetData$Tout_obs_mg = MetData$Cout_mgm * MetData$Q_m
plot(MetData$Date[1:(5*365)], MetData$Tout_obs_mg[1:(5*365)], main = "Assumed Mixing in Watershed", xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)")
lines(MetData$Date[1:(5*365)], MetData$Tout_mix_mg[1:(5*365)], col = "red")
legend( x= "topright",
legend=c("Observed","Modeled"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
plot(MetData$Date[1:(5*365)], MetData$Tout_obs_mg[1:(5*365)], main = "Assumed No Mixing in Watershed", xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)")
lines(MetData$Date[1:(5*365)], MetData$Tout_nomix_mg[1:(5*365)], col = "red")
legend( x= "topright",
legend=c("Observed","Modeled"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
#Step 4: Using the water and tracer mass balances, go back and re-estimate the initial catchment storage
# The inital guess of 400 mg/m appeared to be too high, so the value was re-estimated to be 370 mg/m
# Both concentration and mass plots show that the assumed mixing in the watershed condition matched the observed data best,
# so the mixing condition is used
#Step 5: Plot Two years of Chloride mass In and Out # for the mixing condition
#Compare in and out time series
#Which signal has more variability? Why?
plot(MetData$Date[1:(2*365)], MetData$Tin_obs_mg[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg)")
lines(MetData$Date[1:(2*365)], MetData$Tout_mix_mg[1:(2*365)], xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)", col = "red")
legend( x= "topright",
legend=c("Observed","Modeled"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
#Step 6: Plot two years of catchment Storage chloride concentration (mg / m) and ET
# What effect are we seeing here?
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)", col = "red")
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)", col = "red")
par(mfrow=c(2,2))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)", col = "red")
legend( x= "topright",
legend=c("Catchment Storage Chloride Concentration (mg/m)","Evapotranspiration"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
par(mfrow=c(2,1))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Effluent Chloride Mass (mg)", col = "red")
legend( x= "topright",
legend=c("Catchment Storage Chloride Concentration (mg/m)","Evapotranspiration"),
col=c("black","red"),
pch=c(20, 21), cex = 0.5)
par(mfrow=c(2,1))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(5.1,4.1,4.1,2.1)
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(5.1,4.1,4.1,2.1))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(0.5,0.5,0.5,0.5))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(1.5,1.5,1.5,1.5))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(2.5,2.5,2.5,2.5))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(4,2.5,2.5,2.5))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
par(mfrow=c(2,1))
par(mar=c(4,4,2.5,2.5))
plot(MetData$Date[1:(2*365)], MetData$Cs_mgm[1:(2*365)], xlab = "Date (years)", ylab = "Influent Chloride Mass (mg/m)")
plot(MetData$Date[1:(2*365)], MetData$ET_mm[1:(2*365)], xlab = "Date (years)", ylab = "Evapotranspiration (mm)")
setwd("~/github/Ecohydrology_Modeling")
library(EcoHydRology)
#Read in Soil and Met Data
VZ = read.csv('SoilWaterBalance.csv')
#Step 1: Plot the local meteoric water line (LMWL)
plot(VZ$del_O,VZ$del_H) #each dot is a different rain event, the ones low on delO is winter and high is summer
#Give soils some initial isotopic composition for delO and delH
VZ$del_Soil_O[1] = -10
VZ$del_Soil_H[1] = -100
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
term1 = exp(6.7123 *((10^3)/(Ta + 273.15))/1000)
term2 = exp(0.35041*((10^9)/((Ta + 273.15)^3))/1000)
term3 = exp(7.685/1000)
term4 = exp(1.6664*((10^6)/((Ta + 273.15)^2)/1000))
alpha_star = (term1*term2)/(term3*term4)
#Calculate estar and epsilon (Equilibrium and kinetic separation)
e_star = (alpha_star - 1)*1000
e_k = 1.047
epsilon = e_star + e_k
#Step 3a: Estimate atmospheric del H & O
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
View(VZ)
VS$Tavg_C = mean(VS$Tmin_C, VS$Tmax_C)
VZ$Tavg_C = mean(VZ$Tmin_C, VZ$Tmax_C)
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = mean(VZ$Tmin_C[i], VZ$Tmax_C[i])
}
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = mean(VZ$Tmin_C[i], VZ$Tmax_C[i])
}
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Ecohydrology Week 13
setwd("~/github/Ecohydrology_Modeling")
library(EcoHydRology)
#Read in Soil and Met Data
VZ = read.csv('SoilWaterBalance.csv')
#Step 1: Plot the local meteoric water line (LMWL)
plot(VZ$del_O,VZ$del_H) #each dot is a different rain event, the ones low on delO is winter and high is summer
#Give soils some initial isotopic composition for delO and delH
VZ$del_Soil_O[1] = -10
VZ$del_Soil_H[1] = -100
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
term1[i] = exp(6.7123 *((10^3)/(Z$Tavg_C[i] + 273.15))/1000)
term2[i] = exp(0.35041*((10^9)/((Z$Tavg_C[i] + 273.15)^3))/1000)
term3[i] = exp(7.685/1000)
term4[i] = exp(1.6664*((10^6)/((Z$Tavg_C[i] + 273.15)^2)/1000))
alpha_star[i] = (term1[i]*term2[i])/(term3[i]*term4[i])
#Calculate estar and epsilon (Equilibrium and kinetic separation)
e_star[i] = (alpha_star[i] - 1)*1000
e_k[i] = 1.047
epsilon[i] = e_star[i] + e_k[i]
#Step 3a: Estimate atmospheric del H & O
VZ$del_a_O[i] = (VZ$del_O[i] - e_star[i])/alpha_star[i]
VZ$del_a_H[i] = (VZ$del_H[i] - e_star[i])/alpha_star[i]
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
term1[i] = exp(6.7123 *((10^3)/(Z$Tavg_C[i] + 273.15))/1000)
term2[i] = exp(0.35041*((10^9)/((Z$Tavg_C[i] + 273.15)^3))/1000)
term3[i] = exp(7.685/1000)
term4[i] = exp(1.6664*((10^6)/((Z$Tavg_C[i] + 273.15)^2)/1000))
alpha_star[i] = (term1[i]*term2[i])/(term3[i]*term4[i])
#Calculate estar and epsilon (Equilibrium and kinetic separation)
e_star[i] = (alpha_star[i] - 1)*1000
e_k[i] = 1.047
epsilon[i] = e_star[i] + e_k[i]
#Step 3a: Estimate atmospheric del H & O
VZ$del_a_O[i] = (VZ$del_O[i] - e_star[i])/alpha_star[i]
VZ$del_a_H[i] = (VZ$del_H[i] - e_star[i])/alpha_star[i]
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
term1[i] = exp(6.7123 *((10^3)/(VZ$Tavg_C[i] + 273.15))/1000)
term2[i] = exp(0.35041*((10^9)/((VZ$Tavg_C[i] + 273.15)^3))/1000)
term3[i] = exp(7.685/1000)
term4[i] = exp(1.6664*((10^6)/((VZ$Tavg_C[i] + 273.15)^2)/1000))
alpha_star[i] = (term1[i]*term2[i])/(term3[i]*term4[i])
#Calculate estar and epsilon (Equilibrium and kinetic separation)
e_star[i] = (alpha_star[i] - 1)*1000
e_k[i] = 1.047
epsilon[i] = e_star[i] + e_k[i]
#Step 3a: Estimate atmospheric del H & O
VZ$del_a_O[i] = (VZ$del_O[i] - e_star[i])/alpha_star[i]
VZ$del_a_H[i] = (VZ$del_H[i] - e_star[i])/alpha_star[i]
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
VZ$term1[i] = exp(6.7123 *((10^3)/(VZ$Tavg_C[i] + 273.15))/1000)
VZ$term2[i] = exp(0.35041*((10^9)/((VZ$Tavg_C[i] + 273.15)^3))/1000)
VZ$term3[i] = exp(7.685/1000)
VZ$term4[i] = exp(1.6664*((10^6)/((VZ$Tavg_C[i] + 273.15)^2)/1000))
VZ$alpha_star[i] = (VZ$term1[i]*VZ$term2[i])/(VZ$term3[i]*VZ$term4[i])
#Calculate estar and epsilon (Equilibrium and kinetic separation)
VZ$e_star[i] = (VZ$alpha_star[i] - 1)*1000
VZ$e_k[i] = 1.047
VZ$epsilon[i] = VZ$e_star[i] + VZ$e_k[i]
#Step 3a: Estimate atmospheric del H & O
VZ$del_a_O[i] = (VZ$del_O[i] - VZ$e_star[i])/VZ$alpha_star[i]
VZ$del_a_H[i] = (VZ$del_H[i] - VZ$e_star[i])/VZ$alpha_star[i]
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
library(EcoHydRology)
#Read in Soil and Met Data
VZ = read.csv('SoilWaterBalance.csv')
#Step 1: Plot the local meteoric water line (LMWL)
plot(VZ$del_O,VZ$del_H) #each dot is a different rain event, the ones low on delO is winter and high is summer
#Give soils some initial isotopic composition for delO and delH
VZ$del_Soil_O[1] = -10
VZ$del_Soil_H[1] = -100
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
VZ$term1[i] = exp(6.7123 *((10^3)/(VZ$Tavg_C[i] + 273.15))/1000)
VZ$term2[i] = exp(0.35041*((10^9)/((VZ$Tavg_C[i] + 273.15)^3))/1000)
VZ$term3[i] = exp(7.685/1000)
VZ$term4[i] = exp(1.6664*((10^6)/((VZ$Tavg_C[i] + 273.15)^2)/1000))
VZ$alpha_star[i] = (VZ$term1[i]*VZ$term2[i])/(VZ$term3[i]*VZ$term4[i])
#Calculate estar and epsilon (Equilibrium and kinetic separation)
VZ$e_star[i] = (VZ$alpha_star[i] - 1)*1000
VZ$e_k[i] = 1.047
VZ$epsilon[i] = VZ$e_star[i] + VZ$e_k[i]
#Step 3a: Estimate atmospheric del H & O
VZ$del_a_O[i] = (VZ$del_O[i] - VZ$e_star[i])/VZ$alpha_star[i]
VZ$del_a_H[i] = (VZ$del_H[i] - VZ$e_star[i])/VZ$alpha_star[i]
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
View(VZ)
for (i in 2:nrow(VZ))
{
#Step 2: Calculate average daily temperature
for (i in 1:nrow(VZ))
{
VZ$Tavg_C[i] = (VZ$Tmin_C[i] + VZ$Tmax_C[i])/2
}
#Step 3: Evaporative fractionation and the soil water balance (following Gibson, 2002)
#Calculate alpha star
VZ$term1[i] = exp(6.7123 *((10^3)/(VZ$Tavg_C[i] + 273.15))/1000)
VZ$term2[i] = exp(0.35041*((10^9)/((VZ$Tavg_C[i] + 273.15)^3))/1000)
VZ$term3[i] = exp(7.685/1000)
VZ$term4[i] = exp(1.6664*((10^6)/((VZ$Tavg_C[i] + 273.15)^2)/1000))
VZ$alpha_star[i] = (VZ$term1[i]*VZ$term2[i])/(VZ$term3[i]*VZ$term4[i])
#Calculate estar and epsilon (Equilibrium and kinetic separation)
VZ$e_star[i] = (VZ$alpha_star[i] - 1)*1000
VZ$e_k[i] = 1.047
VZ$epsilon[i] = VZ$e_star[i] + VZ$e_k[i]
#Step 3a: Estimate atmospheric del H & O
VZ$del_a_O[i] = (VZ$del_O[i] - VZ$e_star[i])/VZ$alpha_star[i]
VZ$del_a_H[i] = (VZ$del_H[i] - VZ$e_star[i])/VZ$alpha_star[i]
#Step 3b: Estimate evaporation del H & O
#Step 3c: Use a simple complete mixing approach to calculate the soil water isotopic composition at each time step
#What are we assuming about the TWW hypothesis with this approach?
}
View(VZ)
